using NLog;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Test
{
    class Program
    {
        //日志文件记录
        private static readonly Logger logger = LogManager.GetCurrentClassLogger();
        private static string carType;
        private static string code;
        private static ATRS_QUALEntities entities = new ATRS_QUALEntities();
        private static Service service = new Service();
        private static Random random = new Random();
        private static bool bTrig=false;

        static void Main(string[] args)
        {
            DateTime dt = new DateTime(2020, 6, 1);
            try
            {
                //查询PRODUCT_ASSEMBLY_INFO表中6月1日至今的数据
                var m_data = entities.PRODUCT_ASSEMBLY_INFO.Where(s => s.RECORED_TIME > dt).ToList();
                if (m_data.Count != 0)
                {
                    for (int i = 0; i < m_data.Count; i++)
                    {
                       Console.WriteLine("总装检测条码数量：" + m_data.Count + "当前检测条码数:" + i);
                        carType = "";
                        code = m_data[i].ASSEMBLY_CODE;
                        if (!code.Contains("?"))
                        {
                            if (code.Substring(15, 3) == "L80")
                            {
                                carType = "480B-L80";
                            }
                            else if (code.Substring(15, 3) == "L81")
                            {
                                carType = "480B-L81";
                            }
                            SqlParameter[] parms = new SqlParameter[] {
                                                new SqlParameter("@strCode",m_data[i].ASSEMBLY_CODE),
                                                new SqlParameter("@strCarType",carType),
                                                new SqlParameter("@strType","Normal"),
                            };
                            var A01 = entities.ASSEMBLY_AS083_001.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A01 == null)
                            {
                                Console.WriteLine("001工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_001 aSSEMBLY_AS083_001 = new ASSEMBLY_AS083_001
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-50),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "Running",
                                    OPERATOR_ID = "op123456",
                                    OIL_L = "20.4",
                                    OIL_R = "20.8",
                                    OIL_LSL = "19",
                                    OIL_UCL = "21",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 24,24.5, 1)),
                                };
                                entities.ASSEMBLY_AS083_001.Add(aSSEMBLY_AS083_001);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_001 @strCode,@strCarType,@strType", parms);
                            }

                            var A03R = entities.ASSEMBLY_AS083_003_R.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A03R == null)
                            {
                                Console.WriteLine("003_R工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_003_R aSSEMBLY_AS083_003_R = new ASSEMBLY_AS083_003_R
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-40),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "Running",
                                    OPERATOR_ID = "Running",
                                    ANGLE_UCL = "9999",
                                    ANGLE_LSL = "0",
                                    TORGUE_UCL = "5.7",
                                    TORGUE_LSL = "4.5",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 70, 120, 1)),
                                    TORGUE_1_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_2_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_3_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_4_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_5_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_6_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_7_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_8_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_9_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_10_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_11_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_12 = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_13_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_14_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_15_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_16_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_17_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_18_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    ANGLE_1_ = random.Next(60, 80).ToString(),
                                    ANGLE_2_ = random.Next(60, 80).ToString(),
                                    ANGLE_3_ = random.Next(60, 80).ToString(),
                                    ANGLE_4_ = random.Next(60, 80).ToString(),
                                    ANGLE_5_ = random.Next(60, 80).ToString(),
                                    ANGLE_6_ = random.Next(60, 80).ToString(),
                                    ANGLE_7_ = random.Next(60, 80).ToString(),
                                    ANGLE_8_ = random.Next(60, 80).ToString(),
                                    ANGLE_9_ = random.Next(60, 80).ToString(),
                                    ANGLE_10_ = random.Next(60, 80).ToString(),
                                    ANGLE_11_ = random.Next(60, 80).ToString(),
                                    ANGLE_12_ = random.Next(60, 80).ToString(),
                                    ANGLE_13_ = random.Next(60, 80).ToString(),
                                    ANGLE_14_ = random.Next(60, 80).ToString(),
                                    ANGLE_15_ = random.Next(60, 80).ToString(),
                                    ANGLE_16_ = random.Next(60, 80).ToString(),
                                    ANGLE_17_ = random.Next(60, 80).ToString(),
                                    ANGLE_18_ = random.Next(60, 80).ToString()
                                };
                                entities.ASSEMBLY_AS083_003_R.Add(aSSEMBLY_AS083_003_R);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_003_R @strCode,@strCarType,@strType", parms);
                            }


                            var A03L = entities.ASSEMBLY_AS083_003_L.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A03L == null)
                            {
                                Console.WriteLine("003_L工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_003_L aSSEMBLY_AS083_003_L = new ASSEMBLY_AS083_003_L
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-37),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "Running",
                                    OPERATOR_ID = "Running",
                                    ANGLE_UCL = "9999",
                                    ANGLE_LSL = "0",
                                    TORGUE_UCL = "5.7",
                                    TORGUE_LSL = "4.5",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 100, 200, 1)),
                                    TORGUE_1_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_2_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_3_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_4_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_5_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_6_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_7_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_8_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_9_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    TORGUE_10_ = Convert.ToString(service.NextDouble(random, 4.5, 5.7, 2)),
                                    ANGLE_1_ = random.Next(40, 90).ToString(),
                                    ANGLE_2_ = random.Next(40, 90).ToString(),
                                    ANGLE_3_ = random.Next(40, 90).ToString(),
                                    ANGLE_4_ = random.Next(40, 90).ToString(),
                                    ANGLE_5_ = random.Next(40, 90).ToString(),
                                    ANGLE_6_ = random.Next(40, 90).ToString(),
                                    ANGLE_7_ = random.Next(40, 90).ToString(),
                                    ANGLE_8_ = random.Next(40, 90).ToString(),
                                    ANGLE_9_ = random.Next(40, 90).ToString(),
                                    ANGLE_10_ = random.Next(40, 90).ToString()
                                };
                                entities.ASSEMBLY_AS083_003_L.Add(aSSEMBLY_AS083_003_L);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_003_L @strCode,@strCarType,@strType", parms);
                            }


                            var A05 = entities.ASSEMBLY_AS083_005.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A05 == null)
                            {
                                Console.WriteLine("005工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_005 aSSEMBLY_AS083_005 = new ASSEMBLY_AS083_005
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-35),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "Running",
                                    OPERATOR_ID = "Running",
                                    GALSS_PHASE_L = Convert.ToString(service.NextDouble(random, -8, 8, 3)),
                                    GALSS_PHASE_R = Convert.ToString(service.NextDouble(random, -8, 8, 3)),
                                    GALSS_PHASE_D_VALUE = Convert.ToString(service.NextDouble(random, -8, 8, 3)),
                                    ROLL_PHASE_R = Convert.ToString(service.NextDouble(random, -8, 8, 3)),
                                    ROLL_PHASE_L = Convert.ToString(service.NextDouble(random, -8, 8, 3)),
                                    ROLL_PHASE_D_VALUE = Convert.ToString(service.NextDouble(random, -8, 8, 3)),
                                    GLASS_MOTOR_CURRENT = Convert.ToString(service.NextDouble(random, 0, 2, 1)),
                                    ROLL_MOTOR_CURRENT = Convert.ToString(service.NextDouble(random, 0, 2, 1)),
                                    GALSS_PHASE_L_UCL = "8",
                                    GALSS_PHASE_L_LSL = "-8",
                                    GALSS_PHASE_R_UCL = "8",
                                    GALSS_PHASE_R_LSL = "-8",
                                    ROLL_PHASE_L_UCL = "8",
                                    ROLL_PHASE_L_LSL = "-8",
                                    ROLL_PHASE_R_UCL = "8",
                                    ROLL_PHASE_R_LSL = "-8",
                                    GLASS_MOTOR_CURRENT_UCL = "110",
                                    GLASS_MOTOR_CURRENT_LSL = "1",
                                    ROLL_MOTOR_CURRENT_UCL = "110",
                                    ROLL_MOTOR_CURRENT_LSL = "1",
                                    //ECU_CODE_1_ = "9330901" + random.Next(100, 999).ToString(),
                                    //ECU_CODE_2_ = "9340900" + random.Next(100, 999).ToString(),
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 35, 50, 1)),
                                    GALSS_PHASE_D_VALUE_LSL = "-4",
                                    GALSS_PHASE_D_VALUE_UCL = "4",
                                    ROLL_PHASE_D_VALUE_LSL = "-5",
                                    ROLL_PHASE_D_VALUE_UCL = "5",
                                    ROLL_CODE = m_data[i].AS083_005_ROLL_CODE
                                };
                                entities.ASSEMBLY_AS083_005.Add(aSSEMBLY_AS083_005);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_005 @strCode,@strCarType,@strType", parms);
                            }


                            var A06 = entities.ASSEMBLY_AS083_006.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A06 == null)
                            {
                                Console.WriteLine("006工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_006 aSSEMBLY_AS083_006 = new ASSEMBLY_AS083_006
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-33),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "Running",
                                    OPERATOR_ID = "Running",
                                    ANGLE_UCL = "9999",
                                    ANGLE_LSL = "0",
                                    TORGUE_UCL = "7",
                                    TORGUE_LSL = "5.5",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 375, 385, 1)),
                                    //ACDBARCODE = "471015114700000000821202200104" + random.Next(100, 999).ToString(),
                                    TORGUE_1_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_2_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_3_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_4_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_5_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_6_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_7_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_8_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_9_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_10_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_11_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_12 = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_13_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_14_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_15_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_16_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_17_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_18_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_19_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_20_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_21_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_22_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_23_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_24_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_25_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    TORGUE_26_ = Convert.ToString(service.NextDouble(random, 5.5, 7, 2)),
                                    ANGLE_1_ = random.Next(30, 80).ToString(),
                                    ANGLE_2_ = random.Next(30, 80).ToString(),
                                    ANGLE_3_ = random.Next(30, 80).ToString(),
                                    ANGLE_4_ = random.Next(30, 80).ToString(),
                                    ANGLE_5_ = random.Next(30, 80).ToString(),
                                    ANGLE_6_ = random.Next(30, 80).ToString(),
                                    ANGLE_7_ = random.Next(30, 80).ToString(),
                                    ANGLE_8_ = random.Next(30, 80).ToString(),
                                    ANGLE_9_ = random.Next(30, 80).ToString(),
                                    ANGLE_10_ = random.Next(30, 80).ToString(),
                                    ANGLE_11_ = random.Next(30, 80).ToString(),
                                    ANGLE_12_ = random.Next(30, 80).ToString(),
                                    ANGLE_13_ = random.Next(30, 80).ToString(),
                                    ANGLE_14_ = random.Next(30, 80).ToString(),
                                    ANGLE_15_ = random.Next(30, 80).ToString(),
                                    ANGLE_16_ = random.Next(30, 80).ToString(),
                                    ANGLE_17_ = random.Next(30, 80).ToString(),
                                    ANGLE_18_ = random.Next(30, 80).ToString(),
                                    ANGLE_19_ = random.Next(30, 80).ToString(),
                                    ANGLE_20_ = random.Next(30, 80).ToString(),
                                    ANGLE_21_ = random.Next(30, 80).ToString(),
                                    ANGLE_22_ = random.Next(30, 80).ToString(),
                                    ANGLE_23_ = random.Next(30, 80).ToString(),
                                    ANGLE_24_ = random.Next(30, 80).ToString(),
                                    ANGLE_25_ = random.Next(30, 80).ToString(),
                                    ANGLE_26_ = random.Next(30, 80).ToString(),
                                };
                                entities.ASSEMBLY_AS083_006.Add(aSSEMBLY_AS083_006);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_006 @strCode,@strCarType,@strType", parms);
                            }


                            var A07 = entities.ASSEMBLY_AS083_007.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A07 == null)
                            {
                                Console.WriteLine("007工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_007 aSSEMBLY_AS083_007 = new ASSEMBLY_AS083_007
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-31),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    ANGLE_UCL = "300",
                                    ANGLE_LSL = "10",
                                    TORGUE_UCL = "5.5",
                                    TORGUE_LSL = "4.5",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 35, 45, 1)),
                                    GLASSLABEL = "n",
                                    TORGUE_1_ = Convert.ToString(service.NextDouble(random, 4.5, 5.5, 2)),
                                    TORGUE_2_ = Convert.ToString(service.NextDouble(random, 4.5, 5.5, 2)),
                                    TORGUE_3_ = Convert.ToString(service.NextDouble(random, 4.5, 5.5, 2)),
                                    TORGUE_4_ = Convert.ToString(service.NextDouble(random, 4.5, 5.5, 2)),
                                    TORGUE_5_ = Convert.ToString(service.NextDouble(random, 4.5, 5.5, 2)),
                                    TORGUE_6_ = Convert.ToString(service.NextDouble(random, 4.5, 5.5, 2)),
                                    ANGLE_1_ = random.Next(60, 250).ToString(),
                                    ANGLE_2_ = random.Next(60, 250).ToString(),
                                    ANGLE_3_ = random.Next(60, 250).ToString(),
                                    ANGLE_4_ = random.Next(60, 250).ToString(),
                                    ANGLE_5_ = random.Next(60, 250).ToString(),
                                    ANGLE_6_ = random.Next(60, 250).ToString()
                                };
                                entities.ASSEMBLY_AS083_007.Add(aSSEMBLY_AS083_007);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_007 @strCode,@strCarType,@strType", parms);
                            }


                            var A08 = entities.ASSEMBLY_AS083_007.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A08 == null)
                            {
                                Console.WriteLine("008工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_008 aSSEMBLY_AS083_008 = new ASSEMBLY_AS083_008
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-26),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    TORGUE_L_UCL = "11.3",
                                    TORGUE_L_LSL = "7.5",
                                    TORGUE_R_UCL = "7",
                                    TORGUE_R_LSL = "5.5",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 20, 100, 1)),
                                    TORGUE_1_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_2_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_3_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_4_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_5_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_6_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_7_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_8_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_9_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_10_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_11_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_12_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_13_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_14_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_15_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_16_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_17_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    TORGUE_18_ = Convert.ToString(service.NextDouble(random, 7.5, 11.3, 2)),
                                    ANGLE_1_ = random.Next(50, 80).ToString(),
                                    ANGLE_2_ = random.Next(50, 80).ToString(),
                                    ANGLE_3_ = random.Next(50, 80).ToString(),
                                    ANGLE_4_ = random.Next(50, 80).ToString(),
                                    ANGLE_5_ = random.Next(50, 80).ToString(),
                                    ANGLE_6_ = random.Next(50, 80).ToString(),
                                    ANGLE_7_ = random.Next(50, 80).ToString(),
                                    ANGLE_8_ = random.Next(50, 80).ToString(),
                                    ANGLE_9_ = random.Next(50, 80).ToString(),
                                    ANGLE_10_ = random.Next(50, 80).ToString(),
                                    ANGLE_11_ = random.Next(50, 80).ToString(),
                                    ANGLE_12_ = random.Next(50, 80).ToString(),
                                    ANGLE_13_ = random.Next(50, 80).ToString(),
                                    ANGLE_14_ = random.Next(50, 80).ToString(),
                                    ANGLE_15_ = random.Next(50, 80).ToString(),
                                    ANGLE_16_ = random.Next(50, 80).ToString(),
                                    ANGLE_17_ = random.Next(50, 80).ToString(),
                                    ANGLE_18_ = random.Next(50, 80).ToString(),
                                    ANGLE_L_LSL = "0",
                                    ANGLE_L_UCL = "9999",
                                    ANGLE_R_LSL = "0",
                                    ANGLE_R_UCL = "9999",
                                    FLOOR_BARCODE = "471103-11210-A1202007310" + random.Next(100, 999).ToString()
                                };
                                entities.ASSEMBLY_AS083_008.Add(aSSEMBLY_AS083_008);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_008 @strCode,@strCarType,@strType", parms);
                            }


                            var A11 = entities.ASSEMBLY_AS083_011.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A11 == null)
                            {
                                Console.WriteLine("011工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_011 aSSEMBLY_AS083_011 = new ASSEMBLY_AS083_011
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-19),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    ROLL_SAP = Convert.ToString(service.NextDouble(random, 3.4, 16.6, 1)),
                                    GALSS_CLOSE_FORCE = random.Next(50, 90).ToString(),
                                    GALSS_TOILT_FORCE = random.Next(50, 90).ToString(),
                                    ROLL_CLOSE_FORCE = random.Next(50, 90).ToString(),
                                    GLASS_MOTOR_CURRENT = random.Next(0, 10).ToString(),
                                    ROLL_MOTOR_CURRENT = random.Next(0, 10).ToString(),
                                    ROLL_SAG_UCL = "16.6",
                                    ROLL_SAG_LSL = "3.4",
                                    GALSS_CLOSE_FORCE_UCL = "90",
                                    GALSS_CLOSE_FORCE_LSL = "50",
                                    GALSS_TOILT_FORCE_UCL = "90",
                                    GALSS_TOILT_FORCE_LSL = "50",
                                    ROLL_CLOSE_FORCE_UCL = "90",
                                    ROLL_CLOSE_FORCE_LSL = "50",
                                    GLASS_MOTOR_CURRENT_UCL = "10",
                                    GLASS_MOTOR_CURRENT_LSL = "0",
                                    ROLL_MOTOR_CURRENT_UCL = "10",
                                    ROLL_MOTOR_CURRENT_LSL = "0",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 120, 124, 1)),
                                };
                                entities.ASSEMBLY_AS083_011.Add(aSSEMBLY_AS083_011);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_011 @strCode,@strCarType,@strType", parms);
                            }


                            var A12 = entities.ASSEMBLY_AS083_012.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A12 == null)
                            {
                                Console.WriteLine("012工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_012 aSSEMBLY_AS083_012 = new ASSEMBLY_AS083_012
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-17),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    DTED_1_ = "0",
                                    DTED_2_ = "0",
                                    DTED_3_ = "0",
                                    DTED_4_ = "0",
                                    DTED_5_ = "0",
                                    DTED_6_ = "0",
                                    DTED_7_ = "0",
                                    DTED_8_ = "0",
                                    DTED_9_ = "0",
                                    DTED_10_ = "0",
                                    DTED_11_ = "0",
                                    DTED_12_ = "0",
                                    DTED_13_ = "0",
                                    DTED_14_ = "0",
                                    DTED_15_ = "0",
                                    DTED_16_ = "0",
                                    DTED_17_ = "0",
                                    DTED_18_ = "0",
                                    DTED_19_ = "0",
                                    DTED_20_ = "0",
                                    DTED_21_ = "0",
                                    DTED_22_ = "0",
                                    DTED_23_ = "0",
                                    DTED_24_ = "0",
                                    DTED_25_ = "0",
                                    DTED_26_ = "0",
                                    DTED27_ = "0",
                                    DTED_28_ = "0",
                                    DTED_29_ = "0",
                                    DTED_30_ = "0",
                                    DTED_31_ = "0",
                                    DTED_32_ = "0",
                                    DTED_33_ = "0",
                                    DTED_34_ = "0",
                                    DTED_35_ = "0",
                                    DTED_36_ = "0",
                                    DTED_37_ = "0",
                                    DTED_38_ = "0",
                                    DTED_39_ = "0",
                                    DTED_40_ = "0",
                                    DTED_41_ = "0",
                                    DTED_42_ = "0",
                                    DTED_43_ = "0",
                                    DTED_44_ = "0",
                                    DTED_45_ = "0",
                                    DTED_46_ = "0",
                                    DTED_47_ = "0",
                                    DTED_48_ = "0",
                                    DTED_49_ = "0",
                                    DTED_50_ = "0",
                                    DTED_51_ = "0",
                                    DTED_52_ = "0",
                                    GAP_1_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 1)),
                                    GAP_2_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_3_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_4_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_5_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    GAP_6_ = Convert.ToString(service.NextDouble(random, -1, 1, 2)),
                                    GAP_7_ = Convert.ToString(service.NextDouble(random, -1, 1, 2)),
                                    GAP_8_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    GAP_9_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_10_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_11_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_12_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_13_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_14_ = Convert.ToString(service.NextDouble(random, -1.6, 1.6, 2)),
                                    GAP_15_ = Convert.ToString(service.NextDouble(random, -2, 2, 2)),
                                    GAP_16_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    GAP_17_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_18_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_19_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_20_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_21_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_22_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_23_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_24_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_25_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    GAP_26_ = Convert.ToString(service.NextDouble(random, -2, 2, 2)),
                                    GAP_27_ = Convert.ToString(service.NextDouble(random, -1.6, 1.6, 2)),
                                    GAP_28_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    GAP_29_ = "0",
                                    GAP_30_ = "0",
                                    GAP_31_ = "0",
                                    GAP_32_ = "0",
                                    GAP_33_ = "0",
                                    DTED_UCL1 = "1.2",
                                    DTED_LSL1 = "-1.2",
                                    DTED_UCL2 = "1.2",
                                    DTED_LSL2 = "-1.2",
                                    DTED_UCL3 = "1.2",
                                    DTED_LSL3 = "-1.2",
                                    DTED_UCL52 = "1.2",
                                    DTED_LSL52 = "-1.2",
                                    DTED_UCL51 = "1.2",
                                    DTED_LSL51 = "-1.2",
                                    DTED_UCL50 = "1.2",
                                    DTED_LSL50 = "-1.2",
                                    DTED_UCL49 = "1.2",
                                    DTED_LSL49 = "-1.2",
                                    DTED_UCL48 = "1.5",
                                    DTED_LSL48 = "-1.5",
                                    DTED_UCL47 = "1.5",
                                    DTED_LSL47 = "-1.5",
                                    DTED_UCL46 = "1.7",
                                    DTED_LSL46 = "-1.7",
                                    DTED_UCL45 = "1.7",
                                    DTED_LSL45 = "-1.7",
                                    DTED_UCL44 = "2",
                                    DTED_LSL44 = "-1",
                                    DTED_UCL43 = "2",
                                    DTED_LSL43 = "-1",
                                    DTED_UCL42 = "1.5",
                                    DTED_LSL42 = "-1.5",
                                    DTED_UCL41 = "1.5",
                                    DTED_LSL41 = "-1.5",
                                    DTED_UCL40 = "1.2",
                                    DTED_LSL40 = "-1.2",
                                    DTED_UCL39 = "1.2",
                                    DTED_LSL39 = "-1.2",
                                    DTED_UCL38 = "1.2",
                                    DTED_LSL38 = "-1.2",
                                    DTED_UCL37 = "1.2",
                                    DTED_LSL37 = "-1.2",
                                    DTED_UCL36 = "1.2",
                                    DTED_LSL36 = "-1.2",
                                    DTED_UCL35 = "2",
                                    DTED_LSL35 = "-2",
                                    DTED_UCL34 = "1.7",
                                    DTED_LSL34 = "-1.7",
                                    DTED_UCL33 = "2",
                                    DTED_LSL33 = "-1",
                                    DTED_UCL32 = "1.5",
                                    DTED_LSL32 = "-1.5",
                                    DTED_UCL31 = "1.2",
                                    DTED_LSL31 = "-1.2",
                                    DTED_UCL30 = "1.2",
                                    DTED_LSL30 = "-1.2",
                                    DTED_UCL29 = "1.2",
                                    DTED_LSL29 = "-1.2",
                                    DTED_UCL28 = "2",
                                    DTED_LSL28 = "-2",
                                    DTED_UCL27 = "1.5",
                                    DTED_LSL27 = "-1.5",
                                    DTED_UCL26 = "1.5",
                                    DTED_LSL26 = "-1.5",
                                    DTED_UCL25 = "2",
                                    DTED_LSL25 = "-1",
                                    DTED_UCL24 = "1.5",
                                    DTED_LSL24 = "-1.5",
                                    DTED_UCL23 = "1.7",
                                    DTED_LSL23 = "-1.7",
                                    DTED_UCL22 = "1.5",
                                    DTED_LSL22 = "-1.5",
                                    DTED_UCL21 = "1.5",
                                    DTED_LSL21 = "-1.5",
                                    DTED_UCL20 = "1.2",
                                    DTED_LSL20 = "-1.2",
                                    DTED_UCL19 = "1.2",
                                    DTED_LSL19 = "-1.2",
                                    DTED_UCL18 = "1.2",
                                    DTED_LSL18 = "-1.2",
                                    DTED_UCL17 = "1.2",
                                    DTED_LSL17 = "-1.2",
                                    DTED_UCL16 = "1.2",
                                    DTED_LSL16 = "-1.2",
                                    DTED_UCL15 = "1.2",
                                    DTED_LSL15 = "-1.2",
                                    DTED_UCL14 = "1.2",
                                    DTED_LSL14 = "-1.2",
                                    DTED_UCL13 = "1.5",
                                    DTED_LSL13 = "-1.5",
                                    DTED_UCL12 = "1.5",
                                    DTED_LSL12 = "-1.5",
                                    DTED_UCL11 = "1.7",
                                    DTED_LSL11 = "-1.7",
                                    DTED_UCL10 = "1.5",
                                    DTED_LSL10 = "-1.5",
                                    DTED_UCL9 = "2",
                                    DTED_LSL9 = "-1",
                                    DTED_UCL8 = "1.5",
                                    DTED_LSL8 = "-1.5",
                                    DTED_UCL7 = "1.5",
                                    DTED_LSL7 = "-1.5",
                                    DTED_UCL6 = "2",
                                    DTED_LSL6 = "-2",
                                    DTED_UCL5 = "1.2",
                                    DTED_LSL5 = "-1.2",
                                    DTED_UCL4 = "1.2",
                                    DTED_LSL4 = "-1.2",
                                    GAP_UCL33 = "1.2",
                                    GAP_LSL33 = "-1.2",
                                    GAP_UCL32 = "2",
                                    GAP_LSL32 = "-2",
                                    GAP_UCL31 = "1.6",
                                    GAP_LSL31 = "-1.6",
                                    GAP_UCL30 = "1",
                                    GAP_LSL30 = "-1",
                                    GAP_UCL29 = "1.2",
                                    GAP_LSL29 = "-1.2",
                                    GAP_UCL28 = "1.2",
                                    GAP_LSL28 = "-1.2",
                                    GAP_UCL27 = "1.6",
                                    GAP_LSL27 = "-1.6",
                                    GAP_UCL26 = "2",
                                    GAP_LSL26 = "-2",
                                    GAP_UCL25 = "1.5",
                                    GAP_LSL25 = "-1.5",
                                    GAP_UCL24 = "1.2",
                                    GAP_LSL24 = "-1.2",
                                    GAP_UCL23 = "1.2",
                                    GAP_LSL23 = "-1.2",
                                    GAP_UCL22 = "1.2",
                                    GAP_LSL22 = "-1.2",
                                    GAP_UCL21 = "1.2",
                                    GAP_LSL21 = "-1.2",
                                    GAP_UCL20 = "1.2",
                                    GAP_LSL20 = "-1.2",
                                    GAP_UCL19 = "1.2",
                                    GAP_LSL19 = "-1.2",
                                    GAP_UCL18 = "1.2",
                                    GAP_LSL18 = "-1.2",
                                    GAP_UCL17 = "1.2",
                                    GAP_LSL17 = "-1.2",
                                    GAP_UCL16 = "1.5",
                                    GAP_LSL16 = "-1.5",
                                    GAP_UCL15 = "2",
                                    GAP_LSL15 = "-2",
                                    GAP_UCL14 = "1.6",
                                    GAP_LSL14 = "-1.6",
                                    GAP_UCL13 = "1.2",
                                    GAP_LSL13 = "-1.2",
                                    GAP_UCL12 = "1.2",
                                    GAP_LSL12 = "-1.2",
                                    GAP_UCL11 = "1.2",
                                    GAP_LSL11 = "-1.2",
                                    GAP_UCL10 = "1.2",
                                    GAP_LSL10 = "-1.2",
                                    GAP_UCL9 = "1.2",
                                    GAP_LSL9 = "-1.2",
                                    GAP_UCL8 = "1.5",
                                    GAP_LSL8 = "-1.5",
                                    GAP_UCL7 = "1",
                                    GAP_LSL7 = "-1",
                                    GAP_UCL6 = "1",
                                    GAP_LSL6 = "-1",
                                    GAP_UCL5 = "1.5",
                                    GAP_LSL5 = "-1.5",
                                    GAP_UCL4 = "1.2",
                                    GAP_LSL4 = "-1.2",
                                    GAP_UCL3 = "1.2",
                                    GAP_LSL3 = "-1.2",
                                    GAP_UCL2 = "1.2",
                                    GAP_LSL2 = "-1.2",
                                    GAP_UCL1 = "1.2",
                                    GAP_LSL1 = "-1.2",
                                    SEG_VALUE21 = "0",
                                    SEG_VALUE20 = "0",
                                    SEG_VALUE19 = "0",
                                    SEG_VALUE18 = "0",
                                    SEG_VALUE17 = "0",
                                    SEG_VALUE16 = "0",
                                    SEG_VALUE15 = "0",
                                    SEG_VALUE14 = "0",
                                    SEG_VALUE13 = "0",
                                    SEG_VALUE12 = "0",
                                    SEG_VALUE11 = "0",
                                    SEG_VALUE10 = "0",
                                    SEG_VALUE9 = "0",
                                    SEG_VALUE8 = "0",
                                    SEG_VALUE7 = "0",
                                    SEG_VALUE6 = "0",
                                    SEG_VALUE5 = "0",
                                    SEG_VALUE4 = "0",
                                    SEG_VALUE3 = "0",
                                    SEG_VALUE2 = "0",
                                    SEG_VALUE1 = "0",
                                    SEG_VALUE_UCL21 = "2",
                                    SEG_VALUE_LSL21 = "-1",
                                    SEG_VALUE_UCL20 = "2",
                                    SEG_VALUE_LSL20 = "-1",
                                    SEG_VALUE_UCL19 = "2.4",
                                    SEG_VALUE_LSL19 = "-1",
                                    SEG_VALUE_UCL18 = "2",
                                    SEG_VALUE_LSL18 = "-1",
                                    SEG_VALUE_UCL17 = "2",
                                    SEG_VALUE_LSL17 = "-1",
                                    SEG_VALUE_UCL16 = "2",
                                    SEG_VALUE_LSL16 = "-1",
                                    SEG_VALUE_UCL15 = "2",
                                    SEG_VALUE_LSL15 = "-1",
                                    SEG_VALUE_UCL14 = "2",
                                    SEG_VALUE_LSL14 = "-1",
                                    SEG_VALUE_UCL13 = "2",
                                    SEG_VALUE_LSL13 = "-1",
                                    SEG_VALUE_UCL12 = "1.3",
                                    SEG_VALUE_LSL12 = "-1.3",
                                    SEG_VALUE_UCL11 = "-1.3",
                                    SEG_VALUE_LSL11 = "-1.3",
                                    SEG_VALUE_UCL10 = "2.2",
                                    SEG_VALUE_LSL10 = "-2.2",
                                    SEG_VALUE_UCL9 = "2.2",
                                    SEG_VALUE_LSL9 = "-2.2",
                                    SEG_VALUE_UCL8 = "2.4",
                                    SEG_VALUE_LSL8 = "-1",
                                    SEG_VALUE_UCL7 = "2.4",
                                    SEG_VALUE_LSL7 = "-1",
                                    SEG_VALUE_UCL6 = "2.4",
                                    SEG_VALUE_LSL6 = "-1",
                                    SEG_VALUE_UCL5 = "2",
                                    SEG_VALUE_LSL5 = "-1",
                                    SEG_VALUE_UCL4 = "2",
                                    SEG_VALUE_LSL4 = "-1",
                                    SEG_VALUE_UCL3 = "2",
                                    SEG_VALUE_LSL3 = "-1",
                                    SEG_VALUE_UCL2 = "2",
                                    SEG_VALUE_LSL2 = "-1",
                                    SEG_VALUE_UCL1 = "2",
                                    SEG_VALUE_LSL1 = "-1",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 120, 135, 1)),
                                };
                                entities.ASSEMBLY_AS083_012.Add(aSSEMBLY_AS083_012);
                                entities.SaveChanges();
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_012 @strCode,@strCarType,@strType", parms);
                            }


                            var A13 = entities.ASSEMBLY_AS083_013.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A13 == null)
                            {
                                Console.WriteLine("013工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_013 aSSEMBLY_AS083_013 = new ASSEMBLY_AS083_013
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-15),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    DTED_1_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    DTED_2_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    DTED_3_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    DTED_4_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_5_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_6_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_7_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_8_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_9_ = Convert.ToString(service.NextDouble(random, -1, 2, 2)),
                                    DTED_10_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_11_ = Convert.ToString(service.NextDouble(random, -1.7, 1.7, 2)),
                                    DTED_12_ = Convert.ToString(service.NextDouble(random, -1.3, 1.3, 2)),
                                    DTED_13_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_14_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    DTED_15_ = Convert.ToString(service.NextDouble(random, -1.3, 1.3, 2)),
                                    DTED_16_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    DTED_17_ = Convert.ToString(service.NextDouble(random, -1.7, 1.7, 2)),
                                    DTED_18_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_19_ = Convert.ToString(service.NextDouble(random, -1, 2, 2)),
                                    DTED_20_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_21_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_22_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_23_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_24_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_25_ = Convert.ToString(service.NextDouble(random, -1, 2, 2)),
                                    DTED_26_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED27_ = Convert.ToString(service.NextDouble(random, -1, 2, 2)),
                                    DTED_28_ = Convert.ToString(service.NextDouble(random, -1.7, 1.7, 2)),
                                    DTED_29_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_30_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_31_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_32_ = Convert.ToString(service.NextDouble(random, -1.5, 1.5, 2)),
                                    DTED_33_ = Convert.ToString(service.NextDouble(random, -1, 2, 2)),
                                    DTED_34_ = Convert.ToString(service.NextDouble(random, -1.7, 1.7, 2)),
                                    DTED_35_ = Convert.ToString(service.NextDouble(random, -1.7, 1.7, 2)),
                                    DTED_36_ = Convert.ToString(service.NextDouble(random, -1.2, 1.2, 2)),
                                    DTED_37_ = "0",
                                    DTED_38_ = "0",
                                    DTED_39_ = "0",
                                    DTED_40_ = "0",
                                    DTED_41_ = "0",
                                    DTED_42_ = "0",
                                    DTED_43_ = "0",
                                    DTED_44_ = "0",
                                    DTED_45_ = "0",
                                    DTED_46_ = "0",
                                    DTED_47_ = "0",
                                    DTED_48_ = "0",
                                    DTED_49_ = "0",
                                    DTED_50_ = "0",
                                    DTED_51_ = "0",
                                    DTED_52_ = "0",
                                    GAP_1_ = "0",
                                    GAP_2_ = "0",
                                    GAP_3_ = "0",
                                    GAP_4_ = "0",
                                    GAP_5_ = "0",
                                    GAP_6_ = "0",
                                    GAP_7_ = "0",
                                    GAP_8_ = "0",
                                    GAP_9_ = "0",
                                    GAP_10_ = "0",
                                    GAP_11_ = "0",
                                    GAP_12_ = "0",
                                    GAP_13_ = "0",
                                    GAP_14_ = "0",
                                    GAP_15_ = "0",
                                    GAP_16_ = "0",
                                    GAP_17_ = "0",
                                    GAP_18_ = "0",
                                    GAP_19_ = "0",
                                    GAP_20_ = "0",
                                    GAP_21_ = "0",
                                    GAP_22_ = "0",
                                    GAP_23_ = "0",
                                    GAP_24_ = "0",
                                    GAP_25_ = "0",
                                    GAP_26_ = "0",
                                    GAP_27_ = "0",
                                    GAP_28_ = "0",
                                    GAP_29_ = "0",
                                    GAP_30_ = "0",
                                    GAP_31_ = "0",
                                    GAP_32_ = "0",
                                    GAP_33_ = "0",
                                    DTED_UCL1 = "1.2",
                                    DTED_LSL1 = "-1.2",
                                    DTED_UCL2 = "1.2",
                                    DTED_LSL2 = "-1.2",
                                    DTED_UCL3 = "1.2",
                                    DTED_LSL3 = "-1.2",
                                    DTED_UCL52 = "1.2",
                                    DTED_LSL52 = "-1.2",
                                    DTED_UCL51 = "1.2",
                                    DTED_LSL51 = "-1.2",
                                    DTED_UCL50 = "1.2",
                                    DTED_LSL50 = "-1.2",
                                    DTED_UCL49 = "1.2",
                                    DTED_LSL49 = "-1.2",
                                    DTED_UCL48 = "1.5",
                                    DTED_LSL48 = "-1.5",
                                    DTED_UCL47 = "1.5",
                                    DTED_LSL47 = "-1.5",
                                    DTED_UCL46 = "1.7",
                                    DTED_LSL46 = "-1.7",
                                    DTED_UCL45 = "1.7",
                                    DTED_LSL45 = "-1.7",
                                    DTED_UCL44 = "2",
                                    DTED_LSL44 = "-1",
                                    DTED_UCL43 = "2",
                                    DTED_LSL43 = "-1",
                                    DTED_UCL42 = "1.5",
                                    DTED_LSL42 = "-1.5",
                                    DTED_UCL41 = "1.5",
                                    DTED_LSL41 = "-1.5",
                                    DTED_UCL40 = "1.2",
                                    DTED_LSL40 = "-1.2",
                                    DTED_UCL39 = "1",
                                    DTED_LSL39 = "-1",
                                    DTED_UCL38 = "1.7",
                                    DTED_LSL38 = "-1.7",
                                    DTED_UCL37 = "1.2",
                                    DTED_LSL37 = "-1.2",
                                    DTED_UCL36 = "1.2",
                                    DTED_LSL36 = "-1.2",
                                    DTED_UCL35 = "1.7",
                                    DTED_LSL35 = "-1.7",
                                    DTED_UCL34 = "1.7",
                                    DTED_LSL34 = "-1.7",
                                    DTED_UCL33 = "2",
                                    DTED_LSL33 = "-1",
                                    DTED_UCL32 = "1.5",
                                    DTED_LSL32 = "-1.5",
                                    DTED_UCL31 = "1.5",
                                    DTED_LSL31 = "-1.5",
                                    DTED_UCL30 = "1.5",
                                    DTED_LSL30 = "-1.5",
                                    DTED_UCL29 = "1.5",
                                    DTED_LSL29 = "-1.5",
                                    DTED_UCL28 = "1.7",
                                    DTED_LSL28 = "-1.7",
                                    DTED_UCL27 = "2",
                                    DTED_LSL27 = "-1",
                                    DTED_UCL26 = "1.5",
                                    DTED_LSL26 = "-1.5",
                                    DTED_UCL25 = "2",
                                    DTED_LSL25 = "-1",
                                    DTED_UCL24 = "1.5",
                                    DTED_LSL24 = "-1.5",
                                    DTED_UCL23 = "1.5",
                                    DTED_LSL23 = "-1.5",
                                    DTED_UCL22 = "1.5",
                                    DTED_LSL22 = "-1.5",
                                    DTED_UCL21 = "1.5",
                                    DTED_LSL21 = "-1.5",
                                    DTED_UCL20 = "1.5",
                                    DTED_LSL20 = "-1.5",
                                    DTED_UCL19 = "2",
                                    DTED_LSL19 = "-1",
                                    DTED_UCL18 = "1.5",
                                    DTED_LSL18 = "-1.5",
                                    DTED_UCL17 = "1.7",
                                    DTED_LSL17 = "-1.7",
                                    DTED_UCL16 = "1.2",
                                    DTED_LSL16 = "-1.2",
                                    DTED_UCL15 = "1.3",
                                    DTED_LSL15 = "-1.3",
                                    DTED_UCL14 = "1.2",
                                    DTED_LSL14 = "-1.2",
                                    DTED_UCL13 = "1.5",
                                    DTED_LSL13 = "-1.5",
                                    DTED_UCL12 = "1.3",
                                    DTED_LSL12 = "-1.3",
                                    DTED_UCL11 = "1.7",
                                    DTED_LSL11 = "-1.7",
                                    DTED_UCL10 = "1.5",
                                    DTED_LSL10 = "-1.5",
                                    DTED_UCL9 = "2",
                                    DTED_LSL9 = "-1",
                                    DTED_UCL8 = "1.5",
                                    DTED_LSL8 = "-1.5",
                                    DTED_UCL7 = "1.5",
                                    DTED_LSL7 = "-1.5",
                                    DTED_UCL6 = "1.5",
                                    DTED_LSL6 = "-1.5",
                                    DTED_UCL5 = "1.5",
                                    DTED_LSL5 = "-1.5",
                                    DTED_UCL4 = "1.5",
                                    DTED_LSL4 = "-1.5",
                                    GAP_UCL33 = "1.2",
                                    GAP_LSL33 = "-1.2",
                                    GAP_UCL32 = "1.2",
                                    GAP_LSL32 = "-1.2",
                                    GAP_UCL31 = "1.2",
                                    GAP_LSL31 = "-1.2",
                                    GAP_UCL30 = "1.2",
                                    GAP_LSL30 = "-1.2",
                                    GAP_UCL29 = "1.2",
                                    GAP_LSL29 = "-1.2",
                                    GAP_UCL28 = "1.2",
                                    GAP_LSL28 = "-1.2",
                                    GAP_UCL27 = "1.6",
                                    GAP_LSL27 = "-1.6",
                                    GAP_UCL26 = "2",
                                    GAP_LSL26 = "-2",
                                    GAP_UCL25 = "1.5",
                                    GAP_LSL25 = "-1.5",
                                    GAP_UCL24 = "1.2",
                                    GAP_LSL24 = "-1.2",
                                    GAP_UCL23 = "1.2",
                                    GAP_LSL23 = "-1.2",
                                    GAP_UCL22 = "2.2",
                                    GAP_LSL22 = "-2.2",
                                    GAP_UCL21 = "2.2",
                                    GAP_LSL21 = "-2.2",
                                    GAP_UCL20 = "2.2",
                                    GAP_LSL20 = "-2.2",
                                    GAP_UCL19 = "1.6",
                                    GAP_LSL19 = "-1.6",
                                    GAP_UCL18 = "2.2",
                                    GAP_LSL18 = "-2.2",
                                    GAP_UCL17 = "1",
                                    GAP_LSL17 = "-1",
                                    GAP_UCL16 = "1",
                                    GAP_LSL16 = "-1",
                                    GAP_UCL15 = "2",
                                    GAP_LSL15 = "-2",
                                    GAP_UCL14 = "1.6",
                                    GAP_LSL14 = "-1.6",
                                    GAP_UCL13 = "2.2",
                                    GAP_LSL13 = "-2.2",
                                    GAP_UCL12 = "2.2",
                                    GAP_LSL12 = "-2.2",
                                    GAP_UCL11 = "1.5",
                                    GAP_LSL11 = "-1.5",
                                    GAP_UCL10 = "2.2",
                                    GAP_LSL10 = "-2.2",
                                    GAP_UCL9 = "1",
                                    GAP_LSL9 = "-1",
                                    GAP_UCL8 = "2.2",
                                    GAP_LSL8 = "-2.2",
                                    GAP_UCL7 = "1",
                                    GAP_LSL7 = "-1",
                                    GAP_UCL6 = "1",
                                    GAP_LSL6 = "-1",
                                    GAP_UCL5 = "2.2",
                                    GAP_LSL5 = "-2.2",
                                    GAP_UCL4 = "2.2",
                                    GAP_LSL4 = "-2.2",
                                    GAP_UCL3 = "1.5",
                                    GAP_LSL3 = "-1.5",
                                    GAP_UCL2 = "2.2",
                                    GAP_LSL2 = "-2.2",
                                    GAP_UCL1 = "1",
                                    GAP_LSL1 = "-1",
                                    SEG_VALUE21 = "0",
                                    SEG_VALUE20 = "0",
                                    SEG_VALUE19 = "0",
                                    SEG_VALUE18 = "0",
                                    SEG_VALUE17 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE16 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE15 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE14 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE13 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE12 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE11 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE10 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE9 = Convert.ToString(service.NextDouble(random, -2.2, 2.2, 1)),
                                    SEG_VALUE8 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE7 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE6 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE5 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE4 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE3 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE2 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE1 = Convert.ToString(service.NextDouble(random, -1, 2, 1)),
                                    SEG_VALUE_UCL21 = "2",
                                    SEG_VALUE_LSL21 = "-1",
                                    SEG_VALUE_UCL20 = "2",
                                    SEG_VALUE_LSL20 = "-1",
                                    SEG_VALUE_UCL19 = "2.4",
                                    SEG_VALUE_LSL19 = "-1",
                                    SEG_VALUE_UCL18 = "2",
                                    SEG_VALUE_LSL18 = "-1",
                                    SEG_VALUE_UCL17 = "2",
                                    SEG_VALUE_LSL17 = "-1",
                                    SEG_VALUE_UCL16 = "2",
                                    SEG_VALUE_LSL16 = "-1",
                                    SEG_VALUE_UCL15 = "2",
                                    SEG_VALUE_LSL15 = "-1",
                                    SEG_VALUE_UCL14 = "2",
                                    SEG_VALUE_LSL14 = "-1",
                                    SEG_VALUE_UCL13 = "2",
                                    SEG_VALUE_LSL13 = "-1",
                                    SEG_VALUE_UCL12 = "2",
                                    SEG_VALUE_LSL12 = "-1",
                                    SEG_VALUE_UCL11 = "2",
                                    SEG_VALUE_LSL11 = "-1",
                                    SEG_VALUE_UCL10 = "2",
                                    SEG_VALUE_LSL10 = "-1",
                                    SEG_VALUE_UCL9 = "2.2",
                                    SEG_VALUE_LSL9 = "-2.2",
                                    SEG_VALUE_UCL8 = "2",
                                    SEG_VALUE_LSL8 = "-1",
                                    SEG_VALUE_UCL7 = "2",
                                    SEG_VALUE_LSL7 = "-1",
                                    SEG_VALUE_UCL6 = "2",
                                    SEG_VALUE_LSL6 = "-1",
                                    SEG_VALUE_UCL5 = "2",
                                    SEG_VALUE_LSL5 = "-1",
                                    SEG_VALUE_UCL4 = "2",
                                    SEG_VALUE_LSL4 = "-1",
                                    SEG_VALUE_UCL3 = "2",
                                    SEG_VALUE_LSL3 = "-1",
                                    SEG_VALUE_UCL2 = "2",
                                    SEG_VALUE_LSL2 = "-1",
                                    SEG_VALUE_UCL1 = "2",
                                    SEG_VALUE_LSL1 = "-1",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 120, 122, 1)),
                                };
                                entities.ASSEMBLY_AS083_013.Add(aSSEMBLY_AS083_013);
                                entities.Configuration.ValidateOnSaveEnabled = false;
                                entities.SaveChanges();
                                entities.Configuration.ValidateOnSaveEnabled = true;
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_013 @strCode,@strCarType,@strType", parms);
                            }


                            var A14 = entities.ASSEMBLY_AS083_014.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A14 == null)
                            {
                                Console.WriteLine("014工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_014 aSSEMBLY_AS083_014 = new ASSEMBLY_AS083_014
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME.AddMinutes(-13),
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    NOISE_L_OPEN = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_L_CLOSE = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_R_OPEN = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_R_LSL = "0",
                                    NOISE_R_UCL = "65",
                                    NOISE_R_CLOSE = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_L_UCL = "65",
                                    NOISE_L_LSL = "0",
                                    NOISE_MOTOR = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_MOTOR_UCL = "65",
                                    NOISE_MOTOR_LSL = "0",
                                    //GLASS_MOTOR_SF_V = "03OK0721011340000003",
                                    //GLASS_MOTOR_STATUS = "04OK07E30721C7038672",
                                    //ROLL_MOTOR_SF_V = "01OK0721011340000002",
                                    //ROLL_MOTOR_STATUS = "02OK07E30223C6058151",
                                    ABMORMAL_NOISE_STATUS = "False",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 120, 122, 1)),
                                };
                                entities.ASSEMBLY_AS083_014.Add(aSSEMBLY_AS083_014);
                                entities.Configuration.ValidateOnSaveEnabled = false;
                                entities.SaveChanges();
                                entities.Configuration.ValidateOnSaveEnabled = true;
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_014 @strCode,@strCarType,@strType", parms);
                            }


                            var A18 = entities.ASSEMBLY_AS083_018.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                            if (A18 == null)
                            {
                                Console.WriteLine("018工位总成条码" + m_data[i].ASSEMBLY_CODE);
                                ASSEMBLY_AS083_018 aSSEMBLY_AS083_018 = new ASSEMBLY_AS083_018
                                {
                                    ASSEMBLY_CODE = m_data[i].ASSEMBLY_CODE,
                                    RECORED_TIME = m_data[i].RECORED_TIME,
                                    CAR_TYPE = carType,
                                    RUN_STATUS = "RUNNING",
                                    OPERATOR_ID = "RUNNING",
                                    NOISE_L_OPEN = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_L_CLOSE = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_R_OPEN = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_R_CLOSE = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_MOTOR = Convert.ToString(service.NextDouble(random, 55, 65, 1)),
                                    NOISE_MOTOR_UCL = "65",
                                    NOISE_MOTOR_LSL = "0",
                                    //GLASS_MOTOR_SF_V = "03OK0721200330000007",
                                    //GLASS_MOTOR_STATUS = "04OK07E30721B0148662",
                                    //ROLL_MOTOR_SF_V = "01OK0721240350000006",
                                    //ROLL_MOTOR_STATUS = "02OK07E302219D178010",
                                    ABMORMAL_NOISE_STATUS = "False",
                                    TOTAL = random.Next(1, 200).ToString(),
                                    RESULT = "OK",
                                    ERROR_CODE = "0",
                                    CYCLE_TIME = Convert.ToString(service.NextDouble(random, 120, 122, 1)),
                                    ROUND_COUNT = random.Next(100, 999).ToString(),
                                    ROUND_FLAG = "0",
                                    ROUND_MAX = random.Next(5000, 6000).ToString(),
                                    ROUND_MIN = random.Next(5000, 6000).ToString(),
                                    NOISE_L_LSL = "0",
                                    NOISE_L_UCL = "65",
                                    NOISE_R_LSL = "0",
                                    NOISE_R_UCL = "65",
                                    ROUNDD_AVG = "0",
                                    ROUND_CHANGE = "0",
                                    ROUND_CHANGE_MAX = "0",
                                    ROUND_CHANGE_MIN = "0",
                                    ROUND_TYPE = "4",
                                    ROUND_ZERO = "0",
                                };
                                entities.ASSEMBLY_AS083_018.Add(aSSEMBLY_AS083_018);
                                entities.Configuration.ValidateOnSaveEnabled = false;
                                entities.SaveChanges();
                                entities.Configuration.ValidateOnSaveEnabled = true;
                                entities.Database.ExecuteSqlCommand("sp_Product_AS083_018 @strCode,@strCarType,@strType", parms);
                            }
                        }
                    }
                }

                //查询PRODUCT_ACD_INFO表中6月1日至今的数据
                var s_data = entities.PRODUCT_ACD_INFO.Where(s => s.RECORED_TIME > dt).ToList();
                if (s_data.Count != 0)
                {
                    for (int j = 0; j < s_data.Count; j++)
                    {
                        bTrig = false;
                        Console.WriteLine("接着检测条码数量：" + s_data.Count + "当前检测条码数:" + j);
                        code = s_data[j].ASSEMBLY_CODE;
                        carType = "480B";
                        SqlParameter[] parms = new SqlParameter[] {
                                                new SqlParameter("@strCode",s_data[j].ASSEMBLY_CODE),
                                                new SqlParameter("@strCarType",carType),
                            };


                        var A27 = entities.ACDBONDING_AS082_027.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                        var A28 = entities.ACDBONDING_AS082_028.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                        var A29 = entities.ACDBONDING_AS082_029.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                        if (A27 == null)
                        {
                            Console.WriteLine("027工位总成条码" + s_data[j].ASSEMBLY_CODE);
                            bTrig = true;
                            ACDBONDING_AS082_027 aCDBONDING_AS082_027 = new ACDBONDING_AS082_027
                            {
                                ASSEMBLY_CODE = code,
                                RECORED_TIME = A28.RECORED_TIME,
                                CAR_TYPE = "480B",
                                RUN_STATUS = "RUNNING",
                                OPERATOR_ID = "p1",
                                BAN_A_PRIMARY_WIDE_1_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_2_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_3_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_4_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_5_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_6_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_7_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_8_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_9_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_WIDE_10_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_1_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_2_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_3_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_4_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_5_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_6_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_7_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_8_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_9_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                GLASS_C_PRIMARY_WIDE_10_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_1_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_2_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_3_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_4_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_5_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_6_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_7_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_8_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_9_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_D_PRIMARY_WIDE_10_ = Convert.ToString(service.NextDouble(random, 5, 25, 2)),
                                BAN_A_PRIMARY_STATUS = "OK",
                                GLASS_C_PRIMARY_STATUS = "OK",
                                BAN_D_PRIMARY_STATUS = "OK",
                                BAN_A_PRIMARY_UCL = "25",
                                BAN_A_PRIMARY_LSL = "5",
                                GLASS_C_PRIMARY_UCL = "25",
                                GLASS_C_PRIMARY_LSL = "5",
                                BAN_D_PRIMARY_UCL = "25",
                                BAN_D_PRIMARY_LSL = "5",
                                TOTAL = random.Next(1, 200).ToString(),
                                RESULT = "OK",
                                ERROR_CODE = "0",
                                CYCLE_TIME = random.Next(50, 80).ToString()
                            };
                            entities.ACDBONDING_AS082_027.Add(aCDBONDING_AS082_027);
                            entities.SaveChanges();
                            entities.Database.ExecuteSqlCommand("sp_Product_AS082_027 @strCode,@strCarType", parms);
                        }


                        if (A28 == null)
                        {
                            Console.WriteLine("028工位总成条码" + s_data[j].ASSEMBLY_CODE);
                            bTrig = true;
                            ACDBONDING_AS082_028 aCDBONDING_AS082_028 = new ACDBONDING_AS082_028
                            {
                                ASSEMBLY_CODE = code,
                                RECORED_TIME = A29.RECORED_TIME,
                                CAR_TYPE = "480B",
                                RUN_STATUS = "RUNNING",
                                OPERATOR_ID = "p1",
                                BAN_A_CFSE_WIDE_1_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_2_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_3_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_4_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_5_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_6_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_7_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_8_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_9_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_10_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_11_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_12_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_13_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_14_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_15_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_16_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_17_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_18_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_19_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_20_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_21_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_22_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_23_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_24_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_25_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_26_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_27_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_28_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_29_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_WIDE_30_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_1_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_2_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_3_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_4_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_5_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_6_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_7_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_8_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_9_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_10_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_11_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_12_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_13_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_14_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_15_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_16_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_17_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_18_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_19_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_20_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_21_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_22_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_23_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_24_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_25_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_26_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_27_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_28_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_29_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_30_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_1_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_2_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_3_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_4_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_5_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_6_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_7_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_8_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_9_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_10_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_11_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_12_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_13_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_14_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_15_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_16_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_17_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_18_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_19_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_20_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_21_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_22_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_23_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_24_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_25_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_26_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_27_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_28_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_29_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_WIDE_30_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_1_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_2_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_3_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_4_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_5_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_6_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_7_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_8_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_9_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_10_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_11_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_12_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_13_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_14_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_15_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_16_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_17_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_18_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_19_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_20_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_21_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_22_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_23_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_24_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_25_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_26_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_27_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_28_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_29_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                GLASS_C_CFSE_HIGH_30_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_1_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_2_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_3_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_4_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_5_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_6_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_7_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_8_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_9_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_10_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_11_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_12_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_13_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_14_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_15_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_16_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_17_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_18_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_19_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_20_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_21_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_22_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_23_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_24_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_25_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_26_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_27_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_28_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_29_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_WIDE_30_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_1_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_2_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_3_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_4_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_5_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_6_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_7_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_8_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_9_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_10_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_11_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_12_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_13_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_14_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_15_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_16_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_17_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_18_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_19_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_20_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_21_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_22_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_23_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_24_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_25_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_26_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_27_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_28_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_29_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_D_CFSE_HIGH_30_ = Convert.ToString(service.NextDouble(random, 45, 50, 2)),
                                BAN_A_CFSE_HIGH_UCL = "200",
                                BAN_A_CFSE_HIGH_LSL = "30",
                                BAN_A_CFSE_WIDE_UCL = "200",
                                BAN_A_CFSE_WIDE_LSL = "30",
                                BAN_D_CFSE_HIGH_UCL = "350",
                                BAN_D_CFSE_HIGH_LSL = "20",
                                BAN_D_CFSE_WIDE_UCL = "200",
                                BAN_D_CFSE_WIDE_LSL = "30",
                                GLASS_C_CFSE_HIGH_UCL = "200",
                                GLASS_C_CFSE_HIGH_LSL = "30",
                                GLASS_C_CFSE_WIDE_UCL = "350",
                                GLASS_C_CFSE_WIDE_LSL = "20",
                                BAN_A_CFSE_STATUS = "OK",
                                GLASS_C_CFSE_STATUS = "OK",
                                BAN_D_CFSE_STATUS = "OK",
                                TOTAL = random.Next(1, 200).ToString(),
                                RESULT = "OK",
                                ERROR_CODE = "0",
                                CYCLE_TIME = random.Next(70, 90).ToString()
                            };
                            entities.ACDBONDING_AS082_028.Add(aCDBONDING_AS082_028);
                            entities.SaveChanges();
                            entities.Database.ExecuteSqlCommand("sp_Product_AS082_028 @strCode,@strCarType", parms);
                        }


                        if (A29 == null)
                        {
                            Console.WriteLine("029工位总成条码" + s_data[j].ASSEMBLY_CODE);
                            bTrig = true;
                            ACDBONDING_AS082_029 aCDBONDING_AS082_029 = new ACDBONDING_AS082_029
                            {
                                ASSEMBLY_CODE = code,
                                RECORED_TIME = A27.RECORED_TIME,
                                CAR_TYPE = "480B",
                                RUN_STATUS = "RUNNING",
                                OPERATOR_ID = "p1",
                                BAR_1_ = "0.3",
                                BAR_2_ = "0.5",
                                BAR_3_ = "0.1",
                                BAR_UCL = "0.5",
                                BAR_LSL = "0.1",
                                TOTAL = random.Next(1, 200).ToString(),
                                RESULT = "OK",
                                ERROR_CODE = "0",
                                CYCLE_TIME = random.Next(70, 80).ToString()
                            };
                            entities.ACDBONDING_AS082_029.Add(aCDBONDING_AS082_029);
                            entities.SaveChanges();
                            entities.Database.ExecuteSqlCommand("sp_Product_AS082_029 @strCode,@strCarType", parms);
                        }

                        DateTime dTime = s_data[j].RECORED_TIME.AddMinutes(62);
                        var A30 = entities.ACDBONDING_AS082_030.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                        var A31 = entities.ACDBONDING_AS082_031.Where(s => s.ASSEMBLY_CODE.Trim() == code.Trim()).FirstOrDefault();
                        if (A30 == null && A31 == null)
                        {
                            Console.WriteLine("030工位总成条码" + s_data[j].ASSEMBLY_CODE);
                            ACDBONDING_AS082_030 aCDBONDING_AS082_030 = new ACDBONDING_AS082_030
                            {
                                ASSEMBLY_CODE = code,
                                RECORED_TIME = dTime,
                                CAR_TYPE = "480B",
                                RUN_STATUS = "RUNNING",
                                OPERATOR_ID = "p1",
                                WET = Convert.ToString(service.NextDouble(random, 30, 50, 5)),
                                TEMPERATURES = Convert.ToString(service.NextDouble(random, 38, 62, 5)),
                                WET_USL = "50",
                                WET_LSL = "30",
                                TEMPERATURES_UCL = "62",
                                TEMPERATURES_LSL = "38",
                                TOTAL = random.Next(1, 200).ToString(),
                                RESULT = "OK",
                                ERROR_CODE = "0",
                                CYCLE_TIME = "1800"
                            };
                            entities.ACDBONDING_AS082_030.Add(aCDBONDING_AS082_030);
                            entities.SaveChanges();
                            entities.Database.ExecuteSqlCommand("sp_Product_AS082_030 @strCode,@strCarType", parms);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }
            Console.ReadLine();
        }
    }
}